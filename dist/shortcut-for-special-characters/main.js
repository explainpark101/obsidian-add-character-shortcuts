/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var h=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var l=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var p=(o,a)=>{for(var t in a)h(o,t,{get:a[t],enumerable:!0})},C=(o,a,t,e)=>{if(a&&typeof a=="object"||typeof a=="function")for(let s of l(a))!S.call(o,s)&&s!==t&&h(o,s,{get:()=>a[s],enumerable:!(e=g(a,s))||e.enumerable});return o};var w=o=>C(h({},"__esModule",{value:!0}),o);var y={};p(y,{default:()=>c});module.exports=w(y);var u=require("obsidian");var d={customShortcuts:[{id:"insert-dot",name:"Insert Middle Dot (\xB7)",character:"\xB7"},{id:"insert-left-upper-corner-bracket",name:"Insert Left Upper Corner Bracket (\uFF62)",character:"\uFF62"},{id:"insert-right-down-corner-bracket",name:"Insert Right Down Corner Bracket (\uFF63)",character:"\uFF63"}]};var r=require("obsidian"),i=class extends r.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"Shortcut for Dot - Settings"}),new r.Setting(t).setName("Add New Shortcut").setDesc("Add a custom character shortcut").addText(e=>e.setPlaceholder("Command name").setValue("").onChange(async s=>{this.tempName=s})).addText(e=>e.setPlaceholder("Character to insert").setValue("").onChange(async s=>{this.tempCharacter=s})).addButton(e=>e.setButtonText("Add Shortcut").setCta().onClick(async()=>{let s=this.tempCharacter,n=this.tempName;if(s&&n){let m={id:`custom-${Date.now()}`,name:n,character:s};this.plugin.settings.customShortcuts.push(m),await this.plugin.saveSettings(),this.plugin.registerCommands(),this.display()}})),t.createEl("h3",{text:"Current Shortcuts"}),this.plugin.settings.customShortcuts.forEach((e,s)=>{new r.Setting(t).setName(e.name).setDesc(`Character: ${e.character}`).addButton(n=>n.setButtonText("Remove").setWarning().onClick(async()=>{this.plugin.settings.customShortcuts.splice(s,1),await this.plugin.saveSettings(),this.plugin.registerCommands(),this.display()}))})}};var c=class extends u.Plugin{async onload(){console.log("ShortcutForDotPlugin: Loading..."),await this.loadSettings(),this.addSettingTab(new i(this.app,this)),console.log("ShortcutForDotPlugin: Settings tab added"),this.registerCommands(),console.log("ShortcutForDotPlugin: Commands registered")}async loadSettings(){this.settings=Object.assign({},d,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}registerCommands(){this.settings.customShortcuts.forEach(t=>{this.addCommand({id:t.id,name:t.name,editorCallback:(e,s)=>{e.replaceSelection(t.character)}})})}onunload(){}};
